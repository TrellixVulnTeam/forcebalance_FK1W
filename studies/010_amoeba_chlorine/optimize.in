# ForceBalance input file
# The octothorpe '#' is a comment symbol
# Note: If the specified value is 'None' then the option will truly be set to None - not the string 'None'
# Note: 'Section' option types are more complicated and may require you to read the documentation
# Note: Boolean option types require no value, the key being present implies 'True'

$options
# (string) Type of the penalty, L2 or L1 in the optimizer
penalty_type L2

# (allcap) The job type
jobtype newton

# Path to TINKER
tinkerpath /home/leeping/opt/tinker-6.1.01-intel/bin/

# (list) The names of force fields, corresponding to directory forcefields/file_name.(itp|gen)
# Make sure to tag the parameters that you wish to optimize
forcefield chlorine_dcm.prm chlorine_chcl3.prm

# (int) Maximum number of steps in an optimization
maxstep 100

# (float) Factor for multiplicative penalty function in objective function
penalty_additive 0.01

# Negative trust radius means to search over the Levenberg-Marquardt parameter
trust0 -0.1

# Normalize the objective function using the sum of weights?  I usually don't.
normalize_weights no

# Disable the rudimentary charge constraint code.  Even if we had charges,
# I think it's better to use 'evals' to take care of this.
constrain_charge false

# Priors.  THESE ARE IMPORTANT!  They dictate how much the parameter is allowed to vary,
# in conjunction with the penalty_additive parameter.
priors
   VDWS                                 : 5.0
   VDWT                                 : 0.5
   VDWD                                 : 1.0
/priors

$end

$target
# Chloroform_Vdw target.  This is the name of the subdirectory under "targets".
name chloroform_vdw

# Target type.  This corresponds to the name of a class in ForceBalance.
type AbInitio_TINKER

# Weight to give to fitting energies.
w_energy 1.0

# Weight to give to fitting forces (zero because forces don't exist).
# This parameter can probably be left out.
w_force 0.0

# Overall weight with respect to other targets.
weight 1.0

# Compute all energies at once using 'analyze' instead of calling TINKER many times.
all_at_once
$end

$target
# Chloroform_pol target for fitting the atomic polarizability of chlorine.
name chloroform_pol

# Target type.  This corresponds to the name of a class in ForceBalance.
type Moments_TINKER

# Denominators for property types - we are only observing the moments and fitting the polarizabilities.
dipole_denom         0.0
quadrupole_denom     0.0
polarizability_denom 1.0

# Don't optimize the geometry, just use the provided one.
optimize_geometry    0

# Overall weight with respect to other targets.
weight 1.0
$end

# Now the same stuff for dichloromethane.

$target
name dichloromethane_vdw
type AbInitio_TINKER
w_energy 1.0
w_force 0.0
weight 1.0
all_at_once
$end

$target
name dichloromethane_pol
type Moments_TINKER
dipole_denom         0.0
quadrupole_denom     0.0
polarizability_denom 1.0
optimize_geometry    0
weight 1.0
$end
