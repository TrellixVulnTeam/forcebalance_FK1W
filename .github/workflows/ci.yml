name: ci

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: [3.7]  # Needs 2.7 on Linux
    env:
      CI_OS: ${{ matrix.cfg.os }}
      PYVER: ${{ matrix.python-version }}
      PACKAGE: forcebalance

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: test
        channel-priority: true
        environment-file: devtools/conda-envs/test_env.yaml
        auto-activate-base: false

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Environment Information
      shell: bash -l {0}
      run: |
        conda info --all
        conda list

#    - name: Install OpenFF stack and OpenEye on Python 3.6+
#      if: ${{ matrix.python-version != 3.5 && matrix.python-version != 2.7}}
#      shell: bash -l {0}
#      run: |
#        conda install openforcefield -c conda-forge -c omnia -y
#        conda install openeye-toolkits -c openeye -y

#       Need to replace ndcctools with this block
#    - name: Install Work Queue
#      shell: bash -l {0}
#      run: |
#        wget https://raw.githubusercontent.com/leeping/forcebalance/master/tools/install-cctools.sh
#        bash install-cctools.sh
#        echo "Checking for Work Queue import; if successful, no message will be printed"
#        python -c "import work_queue"
#        export PATH="$HOME/opt/cctools/current/bin:$PATH"

    - name: Install GROMACS
      shell: bash -l {0}
      run: |
        # This will not install double precision, needs to be replaced with a fresh build
        conda install gromacs -c bioconda -c conda-forge -y

    - name: Install Tinker
      run: |
        if [ "$CI_OS" == "ubuntu-lates" ]; then
          wget https://dasher.wustl.edu/tinker/downloads/bin-linux-8.8.3.tar.gz -O tinker.tar.gz
        fi
        if [ "$CI_OS" == "macos-latest" ]; then
          wget https://dasher.wustl.edu/tinker/downloads/bin-macos-8.8.3.tar.gz -O tinker.tar.gz
        fi
        tar xvzf tinker.tar.gz &> untar.log

        mkdir -p $HOME/opt/tinker/8.2.1
        if [ "$TRAVIS_OS_NAME" == "osx" ]; then
          gunzip bin-macos/*gz; mv bin-macos $HOME/opt/tinker/8.2.1/bin
        fi
        if [ "$TRAVIS_OS_NAME" == "linux" ]; then
          mv bin-linux64 $HOME/opt/tinker/8.2.1/bin
        fi
        export PATH="$HOME/opt/tinker/8.2.1/bin:$PATH"

    - name: Extract data archives
      run: |
        cd studies/001_water_tutorial
        tar xvjf targets.tar.bz2
        cd ../../

    - name: Install package
      shell: bash -l {0}
      run: |
        # python setup.py install
        python -m pip install --no-deps .
        python -c "import forcebalance; print(forcebalance.__version__)"

    - name: Run water study
      shell: bash -l {0}
      run: |
        cd studies/001_water_tutorial
        tar xvjf targets.tar.bz2
        ForceBalance very_simple.in
        cd ../../

    - name: Run tests
      shell: bash -l {0}
      run: |
        pytest --cov=forcebalance --cov-config=setup.cfg --durations=0 --cov-report=xml

    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
