#!/bin/bash

# This is a wrapper script around the main ForceBalance.py script.
# Run: "ForceBalance [-f] job.in [job.out]"
#
# If the output filename is not specified, it will be automatically created.
#
# If the output file already exists, then this script will exit,
# unless -f is given, and then files will be overwritten.
# 
# Importantly, ForceBalance.py prints a lot of carriage returns as "progress reports".
# These carriage returns are not saved to the output file if this command is used.

minargs=1
maxargs=2
E_EXISTS=64
force=0

show_help() 
{
    echo "Usage: `basename $0` [options] ForceBalance.py job.in [job.out]"
    echo "Values in brackets are optional."
    echo "Options are:"
    echo "  -f               Force overwrite of output file."
    echo "  -h               Show this help message."
    exit 1
}

while getopts f opt 
do
	case "$opt" in
		f)  force=1;;
		h)  show_help;;
		\?) show_help;;
	esac
done

shift $(expr $OPTIND - 1)

if [ $# -lt $minargs ] || [ $# -gt $maxargs ]
then
    show_help
fi

program=ForceBalance.py
input=$(basename "$1")

if [ $# -eq $minargs ]
then
    filename=$(basename "$1")
    extension="${filename##*.}"
    filename="${filename%.*}"
    output=$filename".out" 
    error=$filename".err" 
    echo "Output will be written to $output"
else
    output=$(basename "$2")
    filename="${output%.*}"
    error=$filename".err"
fi

if [ -e $output ] && [ $force -eq 0 ]
then
  echo "The output filename already exists; cowardly exiting"
  exit $E_EXISTS
fi

# Standard error gets written to its own .err file
# Text overwritten by carriage returns are not saved
$program $input 2>$error | tee >(awk -F '\r' '{print $NF}' > $output)
nerr=`wc -l $error | awk '{print $1}'`
if [ $nerr -ne 0 ] ; then
    tail -50 $error
    echo
    echo "$program may not have finished successfully, see error above or look in $error."
    echo "If error does not make sense, please contact me (Lee-Ping)."
else
    rm $error
fi
