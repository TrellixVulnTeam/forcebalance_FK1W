# ForceBalance input file generated by MakeInputFile.py
# The octothorpe '#' is a comment symbol
# Note: If the specified value is 'None' then the option will truly be set to None - not the string 'None'
# Note: 'Section' option types are more complicated and may require you to read the documentation
# Note: Boolean option types require no value, the key being present implies 'True'

$options
# (string) Directory containing force fields, relative to project directory
ffdir forcefield

# (string) Type of the penalty, L2 or L1 in the optimizer
penalty_type L2

# (string) Values to scan in the parameter space for job type "scan[mp]vals", given like this: -0.1:0.01:0.1
scan_vals -1:1:11
scanindex_num 0 1 2 3 4 5 6 7 

# (allcap) The job type, defaults to a single-point evaluation of objective function
jobtype bfgs

# (list) The names of force fields, corresponding to directory forcefields/file_name.(itp|gen)
forcefield tip3p.xml

# (int) Maximum number of steps in an optimization
maxstep 100

# (float) Convergence criterion of step size (just needs to fall below this threshold)
convergence_step 0.0001

# (float) Convergence criterion of objective function (in MainOptimizer this is the stdev of x2 over 10 steps)
convergence_objective 0.0001

# (float) Convergence criterion of gradient norm
convergence_gradient 0.0001

# (float) Minimum eigenvalue for applying steepest descent correction in the MainOptimizer
eig_lowerbound 0.0001

# (float) Step size for finite difference derivatives in many functions (get_(G/H) in fitsim, FDCheckG)
finite_difference_h 0.001

# (float) Factor for multiplicative penalty function in objective function
penalty_multiplicative 0.1

trust0 0.1

priors
   NonbondedForce.Atom/charge           : 1.0
   HarmonicAngleForce.Angle/angle       : 0.5
   NonbondedForce.Atom/sigma            : 0.1
   HarmonicBondForce.Bond/length        : 0.01
/priors

$end


$simulation
# (string) The name of the simulation, which corresponds to the directory simulations/dir_name
name Energy_Force

# (allcap) The type of fitting simulation, for instance AbInitio_GMXX2
simtype AbInitio_OpenMM

# (list) The parameter types that need to be differentiated using finite difference
fd_ptypes all

# (bool) Finite difference gradients
fdgrad 1

# (bool) Finite difference Hessian diagonals (cheap; costs 2np times a objective calculation)
fdhessdiag 1

# (float) Weight of the current simulation (with respect to other simulations)
weight 1.0

w_energy 1.0
w_force 0.0
$end
